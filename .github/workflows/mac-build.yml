name: Timestream ODBC Driver for Mac

on:
  workflow_dispatch:

env:
  CI_OUTPUT_PATH: "ci-output"
  ODBC_LIB_PATH: "./build/odbc/lib"
  ODBC_BIN_PATH: "./build/odbc/bin"
  ODBC_BUILD_PATH: "./build/odbc/build"
  AWS_SDK_INSTALL_PATH: "./build/aws-sdk/install"

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: run-cppcheck
      run: |
        brew install cppcheck
        sh run_cppcheck.sh
    - name: upload-cppcheck-results
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: cppcheck-results
        path: cppcheck-results.log
    - name: get-dependencies
      run: |
        brew unlink unixodbc
        brew install curl
        brew install cmake
        brew install libiodbc
    - name: configure-and-build-driver
      run: |
        ./build_mac_release64.sh
    - name: configure-aws-credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: prepare-dsn
      run: |
        sudo mkdir /Library/ODBC
        sudo cp ./src/Tests/Tests/odbc-mac.ini /Library/ODBC/odbc.ini
        sudo cp ./src/Tests/Tests/odbcinst-mac.ini /Library/ODBC/odbcinst.ini
        mkdir ${{ github.workspace }}/odbc-logs
    - name: run-tests
      run: |
        ./build/odbc/bin/tests --gtest_filter=-TestSQLConnectSAMLAuth.*:TestSQLDriverConnectSAMLAuth.*
    - name: print-test-logs
      if: failure()
      run: |
        cat /tmp/timestreamodbc_*.log
        cat ./aws_sdk_*.log
    - name: print-memory-leak-logs
      if: always()
      run: |
        cat ./leaks_*
    - name: upload-test-logs
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: test-logs-mac64
        path: |
          ${{ github.workspace }}/odbc-logs/
          ${{ github.workspace }}/leaks_
    #- name: test
    #  run: |
    #    bash ./run_test_runner.sh
    - name: build-installer
      if: success()
      run: |
        cd cmake-build64
        cmake ../src
        make
        cpack .
        cd ..
    - name: create-output
      if: success()
      run: |
        mkdir build-output
        mkdir test-output
        mkdir installer
        cp ./build/odbc/lib/*.dylib build-output/
        cp ./build/odbc/lib/*.a build-output/
        cp ./cmake-build64/*.pkg installer/
    - name: upload-build
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: mac64-build
        path: build-output
    - name: upload-installer
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: mac64-installer
        path: installer
    #- name: upload-test-results
    #  if: success()
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: mac-test-results
    #    path: test-output
