name: ODBC Driver for Linux

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  CI_OUTPUT_PATH: "ci-output"
  ODBC_LIB_PATH: "./build/odbc/lib"
  ODBC_BIN_PATH: "./build/odbc/bin"
  ODBC_BUILD_PATH: "./build/odbc/build"
  AWS_SDK_INSTALL_PATH: "./build/aws-sdk/install"
  NOT_CONNECTED: 1
  FAKE_CONNECTION: 1

jobs:
  build-linux64:
    runs-on: ubuntu-latest
    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.11
      with:
        cmake-version: '3.21.4'
    - uses: actions/checkout@v2
    - name: Get Java distribution
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'
        architecture: x64
    - name: run-cppcheck
      run: |
        sudo apt install cppcheck
        sh run_cppcheck.sh
    - name: upload-cppcheck-results
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: cppcheck-results
        path: cppcheck-results.log
    - name: get-dependencies
      if: success()
      run: |
        sudo apt update
        sudo apt install libcurl4-openssl-dev libssl-dev uuid-dev zlib1g-dev libpulse-dev linux-headers-$(uname -r) gcc gcc-multilib  g++ g++-multilib linux-headers-$(uname -r) build-essential valgrind
    - name: prepare-dsn
      if: success()
      run: |
        sudo cp ./src/Tests/Tests/odbc-linux64.ini /etc/odbc.ini
        sudo cp ./src/Tests/Tests/odbcinst-linux64.ini /etc/odbcinst.ini
        mkdir -p ${{ github.workspace }}/odbc-logs
        export ODBCSYSINI=/etc/
        export ODBCINSTINI=odbcinst.ini
        export ODBCINI=/etc/odbc.ini
    - name: configure-and-build-driver
      run: |
        ./build_linux_release64_deb.sh
    - name: run-tests
      if: success()
      run: |
        ./build/odbc/bin/tests --gtest_output="xml:report.xml"
    - name: prepare-test-results
      if: always()
      run: |
        cp ${{ github.workspace }}/report.xml ${{ github.workspace }}/odbc-logs/
    - name: upload-test-report
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: test-results-linux64
        path: ${{ github.workspace }}/report.xml
    - name: build-deb-installer
      if: success()
      run: |
        cd cmake-build64
        cmake ../src
        make -j4
        cpack .
        cd ..
    - name: create-output
      if: success()
      run: |
        mkdir deb-installer
        mkdir build-output
        mkdir test-output
        cp -v ./build/odbc/lib/*.a build-output/
        cp -v ./build/odbc/lib/*.so build-output/
        cp -v ./cmake-build64/*.deb deb-installer/
    - name: upload-build
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: linux64-build
        path: build-output
    - name: upload-linux64-deb-installer
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: linux64-deb-installer
        path: deb-installer
