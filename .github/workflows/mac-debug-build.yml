name: ODBC Driver for Mac (Debug)

on:
  workflow_dispatch:

env:
  CI_OUTPUT_PATH: "ci-output"
  ODBC_LIB_PATH: "./build/odbc/lib"
  ODBC_BIN_PATH: "./build/odbc/bin"
  ODBC_BUILD_PATH: "./build/odbc/build"
  AWS_SDK_INSTALL_PATH: "./build/aws-sdk/install"
  NOT_CONNECTED: 1
  FAKE_CONNECTION: 1

jobs:
  build-mac:
    runs-on: macos-latest
    env: 
      NOT_CONNETECD: 1
      FAKE_CONNECTION: 1
    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.11
      with:
        cmake-version: '3.21.4'
    - uses: actions/checkout@v2
    - name: Get Java distribution
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'
        architecture: x64
    - name: run-cppcheck
      run: |
        brew install cppcheck
        sh run_cppcheck.sh
    - name: upload-cppcheck-results
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: cppcheck-results
        path: cppcheck-results.log
    - name: get-dependencies
      run: |
        brew unlink unixodbc
        brew install curl
        brew install libiodbc
    - name: set-PATH
      run: |
        export PATH=/Library/Developer/CommandLineTools/usr/bin:$PATH
    - name: configure-and-build-driver
      run: |
        ./build_mac_debug64.sh
    - name: prepare-dsn
      run: |
        sudo mkdir /Library/ODBC
        sudo mv ./src/Tests/Tests/odbc.ini /Library/ODBC
        mkdir ${{ github.workspace }}/odbc-logs
    - name: run-tests
      run: |
        ./build/odbc/bin/tests --gtest_output="xml:report.xml"
    - name: upload-test-report
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: test-result-macos
        path: ${{ github.workspace }}\report.xml
    - name: print-memory-leak-logs
      if: always()
      run: |
        cat ./leaks_*
    - name: upload-test-logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-logs-mac64
        path: |
          ${{ github.workspace }}/odbc-logs/
          ${{ github.workspace }}/leaks_
